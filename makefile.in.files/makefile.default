# -*- mode: makefile -*-
#
########################################################
### Do not add any customization to this file.       ###
### put customizations in the platform or cxx files. ###
########################################################

MAKE_DEP += ${VES3D_MKDIR}/makefile.default

# user flags
VES3D_DEBUG      ?= no  #affects only compiler flags (not printing)
VES3D_PROFILE    ?= no  #turns on profiling macros
VES3D_VERBOSE    ?= 3   #1=most verbose, 2=normal, 3=quiet
VES3D_TESTING    ?= no  #equal to DEBUG and PROFILE

VES3D_USE_GPU    ?= no
VES3D_USE_MPI    ?= no
VES3D_USE_PVFMM  ?= no     #turns on VES3D_USE_MPI
VES3D_USE_PETSC  ?= no     #turns on VES3D_USE_MPI (could be avoided)
VES3D_PETSC_VER  ?= 33     #use xx instead of x.x for easier comparison in the code (tested for 33 and 35)
VES3D_PREC       ?= DOUBLE #or SINGLE

COMPILER_VENDOR  ?= gnu  #or gnu

# implicit variables
AR      = ar
DOX     = doxygen
NVCC    = nvcc
MKDIR   = mkdir -p
RANLIB  = ranlib
RM      = rm -f
TAGS    = etags

ifeq ($(strip ${COMPILER_VENDOR}),intel)
  CC  = icc
  CXX = icpc
else
  CC  = gcc
  CXX = g++
endif

# ves3d variables
VES3D_BINDIR   ?= $(VES3D_DIR)/bin
VES3D_DOCDIR   ?= $(VES3D_DIR)/docs
VES3D_EXPRDIR  ?= $(VES3D_DIR)/experiment
VES3D_INCDIR   ?= $(VES3D_DIR)/include
VES3D_LIBDIR   ?= $(VES3D_DIR)/lib
VES3D_SRCDIR   ?= $(VES3D_DIR)/src
VES3D_TSTDIR   ?= $(VES3D_DIR)/test
VES3D_VERSION  := $(shell hg -q id -n 2>/dev/null || echo 0)
VES3D_CHKEXT   ?= chk

# PETSC (needs to be first b/c it overwrites make variables!)
ifeq ($(strip ${VES3D_USE_PETSC}),yes)
  ifeq ($(shell test "${VES3D_PETSC_VER}" -ge 36 && echo 1), 1)
    include ${PETSC_DIR}/lib/petsc/conf/variables
  else
    include ${PETSC_DIR}/conf/variables
  endif

  CXXFLAGS += ${PETSC_CC_INCLUDES} -DHAS_PETSC
  LDLIBS   += ${PETSC_LIB_BASIC}
  LDFLAGS  += -L${PETSC_LIB_DIR}
endif

# PVFMM (should come first so that the flags are ordered properly)
ifeq ($(strip ${VES3D_USE_PVFMM}),yes)
  -include ${PVFMM_DIR}/MakeVariables
  ifndef CXXFLAGS_PVFMM
  -include $(VES3D_DIR)/pvfmm/MakeVariables
  endif
  ifdef CXXFLAGS_PVFMM
    CXXFLAGS += ${CXXFLAGS_PVFMM} -DHAVE_PVFMM
    LDLIBS   := ${LDFLAGS_PVFMM} ${LDLIBS}
    CXX       = ${CXX_PVFMM}
  else
    $(warning WARNING: File not found: $${PVFMM_DIR}/MakeVariables. Not supporting PVFMM.)
  endif
endif

# CPU flags
VES3D_TEMPLATES = -I$(VES3D_SRCDIR)
VES3D_INCLUDE   = -I$(VES3D_INCDIR) $(VES3D_TEMPLATES)
VES3D_CXXFLAGS  = $(VES3D_INCLUDE) -DVES3D_VERSION=${VES3D_VERSION}
VES3D_LIBS      = ves3d
VES3D_LDFLAGS   = -L$(VES3D_LIBDIR)

# GPU, CUDA_DIR below is undefined by default (platform file should define it)
CUDA_INCLUDE  = -I${CUDA_DIR}/include
CUDA_FLAGS    = ${VES3D_INCLUDE} ${CUDA_INCLUDE} -m64 \
								-gencode arch=compute_20,code=sm_20 \
								-gencode arch=compute_30,code=sm_30 \
								-gencode arch=compute_32,code=sm_32 \
								-gencode arch=compute_35,code=sm_35 \
								-gencode arch=compute_50,code=sm_50 \
								-gencode arch=compute_50,code=compute_50
CUDA_LDFLAGS  = -L${CUDA_DIR}/lib64
CUDA_LDLIBS   = -lcublas -lcudart #-Wl,-rpath ${CUDA_DIR}/lib64

%.o: %.cu $(MAKE_DEP)
	$(NVCC) ${CUDA_FLAGS} -c -o $@ $<

# GPU
ifeq ($(strip ${VES3D_USE_GPU}),yes)
  VES3D_LIBS   += ves3dgpu
  CXXFLAGS     += -DGPU_ACTIVE ${CUDA_INCLUDE}
  LDFLAGS      += ${CUDA_LDFLAGS}
  LDLIBS       += ${CUDA_LDLIBS}
endif

# implicit variables
CXXFLAGS       += $(VES3D_CXXFLAGS)
LDFLAGS        += -L$(VES3D_LIBDIR)
LDLIBS         += $(addprefix -l,${VES3D_LIBS})

# misc
ARFLAGS = r
ARFILES = $(addprefix lib,$(addsuffix .a,${VES3D_LIBS}))

BLASPKG        = HAS_BLAS
BLAS_LDFLAGS   = -L/usr/lib
BLAS_LDLIBS    = -llapack -lblas
BLAS_INCLUDE   =
CXXFLAGS       += -D${BLASPKG} ${BLAS_INCLUDE}  -std=c++14 -fabi-version=6 #-fpermissive -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk

# linker
LDFLAGS        += ${BLAS_LDFLAGS}
LDLIBS         += $(BLAS_LDLIBS) -lpthread

include $(VES3D_MKDIR)/makefile.vesflags
